<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title><%= title %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<%= description %>">
    <meta name="author" content="<%= author %>">

    <!-- styles -->
	  <!-- Latest compiled and minified CSS -->
	  <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">

	  <!-- Optional theme -->
	  <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css">

    <!--<link href="css/bootstrap.css" rel="stylesheet">-->
	<link href="css/urbanharvester.css" rel="stylesheet">

    <style type="text/css">
      body {
        padding-top: 60px;
        padding-bottom: 40px;
      }
    </style>
    <!--<link href="css/bootstrap-responsive.css" rel="stylesheet">-->

    <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Fav and touch icons -->
    <link rel="shortcut icon" href="img/favicon.ico">
    <link rel="apple-touch-icon" href="img/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="img/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="img/apple-touch-icon-114x114.png">
  </head>

  <body>
    <%- body %>
   
    <!-- Some JavaScript, placed at the end of the document so the pages load faster -->

    <!-- Grab Google CDN's jQuery, with a protocol relative URL; fall back to local if offline -->
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="js/jquery-1.7.1.min.js"><\/script>')</script>


    <!-- Latest compiled and minified JavaScript -->
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="/twitter-bootstrap/twitter-bootstrap-v2/docs/assets/js/bootstrap-dropdown.js"></script>
    <script src="js/urbanharvester.js"></script>
    <!--&lt;!&ndash; Need mroe Bootstrap features? Uncomment some lines below. &ndash;&gt;-->
    <!--<script src="js/bootstrap.min.js"></script>-->
    <!--<script src="js/bootstrap-transition.js"></script>-->
    <!--<script src="js/bootstrap-alert.js"></script>-->
    <!--<script src="js/bootstrap-modal.js"></script>-->
    <!--<script src="js/bootstrap-dropdown.js"></script>-->
    <!--<script src="js/bootstrap-scrollspy.js"></script>-->
    <!--<script src="js/bootstrap-tab.js"></script>-->
    <!--<script src="js/bootstrap-tooltip.js"></script>-->
    <!--<script src="js/bootstrap-popover.js"></script>-->
    <!--<script src="js/bootstrap-button.js"></script>-->
    <!--<script src="js/bootstrap-collapse.js"></script>-->
    <!--<script src="js/bootstrap-carousel.js"></script>-->
    <!--<script src="js/bootstrap-typeahead.js"></script>-->

    <link rel="stylesheet" href="http://js.arcgis.com/3.8/js/dojo/dijit/themes/claro/claro.css">
    <link rel="stylesheet" href="http://js.arcgis.com/3.8/js/esri/css/esri.css">
    <link rel="stylesheet" href="http://js.arcgis.com/3.8/js/dojo/dojox/layout/resources/FloatingPane.css">
    <style>
	    body,html,#main{margin:0;padding:0;height:100%;width:100%;},
	    #HomeButton {position: absolute;top: 95px;left: 20px;z-index: 50;}
	    .panel {
		    -moz-border-radius: 6px;
		    -webkit-border-radius: 6px;
		    -moz-box-shadow: 0px 6px 3px -3px #888;
		    -webkit-box-shadow: 0px 6px 3px -3px #888;
		    box-shadow: 0px 6px 3px -3px #888;
		    border: 2px solid #86942A;
		    margin: 5px;5px;5px;5px;
	    }
    </style>
    <script src="http://js.arcgis.com/3.8/"></script>
    <script>
    require(["dojo/dom",
	    "dojo/_base/array",
	    "dojo/_base/Color",
	    "dojo/parser",

	    "esri/map",
	    "esri/lang",
	    "esri/graphic",
	    "esri/InfoTemplate",
	    "esri/layers/GraphicsLayer",
	    "esri/renderers/SimpleRenderer",
	    "esri/geometry/Point",
	    "esri/tasks/FeatureSet",
	    "esri/tasks/ClosestFacilityTask",
	    "esri/tasks/ClosestFacilityParameters",
	    "esri/symbols/SimpleMarkerSymbol",
	    "esri/symbols/SimpleLineSymbol",
	    "esri/dijit/HomeButton",
	    "esri/layers/FeatureLayer",
	    "esri/InfoTemplate",
	    "esri/dijit/InfoWindowLite",
	    "esri/dijit/LocateButton",

	    "dijit/form/ComboBox",
	    "dijit/layout/BorderContainer",
	    "dijit/layout/ContentPane",
    ],
		    function(dom, array, Color, parser, Map, esriLang, Graphic, InfoTemplate, GraphicsLayer, SimpleRenderer, Point, FeatureSet,
		             ClosestFacilityTask, ClosestFacilityParameters, SimpleMarkerSymbol, SimpleLineSymbol, HomeButton, FeatureLayer, InfoTemplate, InfoWindowLite, LocateButton ){

			    var map, home, featureLayer, infoTemplate, incidentsGraphicsLayer, routeGraphicLayer, closestFacilityTask, params;

			    parser.parse();

			    map = new Map("map", {
				    basemap: "topo",
				    center: [-118.118056,34.144444],
				    zoom: 17
				    // showInfoWindowOnClick:false
			    });

			    geoLocate = new LocateButton({
				    map: map
			    }, "LocateButton");
			    geoLocate.startup();



			    // var infoWindow = new InfoWindowLite(null, dom.create("div", null, null, map.root));
			    // infoWindow.startup();
			    // map.setInfoWindow(infoWindow);

			    //  Info window lite
			    var infoWindowLite = new esri.dijit.InfoWindowLite(null, dojo.create("div", null, map.root));
			    infoWindowLite.startup();
			    map.setInfoWindow(infoWindowLite);


			    var stateInfoTemplate = new InfoTemplate();
			    stateInfoTemplate.setTitle("<b>${Agency_Name}</b>");
			    stateInfoTemplate.setContent("Meal: ${Meals} <br/> Phone: ${Phone} <br/> Website : ${Website} <br/> FID : ${FID}");
//
//        //add a layer to the map
			    var agencyLayer = new FeatureLayer("http://services3.arcgis.com/aA157FZrkzacu5Cq/arcgis/rest/services/Urban_Harvester_Agencies_and_Donors/FeatureServer/0", {
				    mode: FeatureLayer.MODE_ONDEMAND,
				    infoTemplate:stateInfoTemplate,
				    outFields: ["Agency_Name", "Meals", "Phone", "Agency_Tax_ID", "Website", "FID"]
			    });
			    map.addLayer(agencyLayer);

//       //define the info template that is used to display the popup content.
			    infoTemplate = new InfoTemplate("Fields", "");

			    // //create the feature layer (street trees of San Francisco)
			    // featureLayer = new FeatureLayer("http://services3.arcgis.com/aA157FZrkzacu5Cq/ArcGIS/rest/services/Urban_Harvester_Agencies_and_Donors/MapServer/0",{
			    //         mode: FeatureLayer.MODE_ONDEMAND,
			    //         outFields: ["*"],
			    //         opacity: .80,
			    //         infoTemplate: infoTemplate
			    // });
			    // map.addLayer(featureLayer);

			    //create the feature layer (pasadena collision data)
			    var trafficLayer = new FeatureLayer("http://services3.arcgis.com/aA157FZrkzacu5Cq/arcgis/rest/services/Traffic-collision-data-view/FeatureServer/0",
					    {
						    mode: FeatureLayer.MODE_ONDEMAND,
						    outFields: ["*"],
						    opacity: .80,
						    infoTemplate: infoTemplate
					    });
			    map.addLayer(trafficLayer);

			    map.on("click", mapClickHandler);

			    params = new ClosestFacilityParameters();
			    params.defaultCutoff= 50.0;
			    params.returnIncidents=false;
			    params.returnRoutes=true;
			    params.returnDirections=true;

			    map.on("load", function(evtObj) {
				    var map = evtObj.target;
				    var facilityPointSymbol = new SimpleMarkerSymbol(
						    SimpleMarkerSymbol.STYLE_DIAMOND,
						    15,
						    new SimpleLineSymbol(
								    SimpleLineSymbol.STYLE_SOLID,
								    new Color([0,255,0]), 2
						    ),
						    new Color([130,159,83,0.40])
				    );

				    var incidentPointSymbol = new SimpleMarkerSymbol(
						    SimpleMarkerSymbol.STYLE_CROSS,
						    16,
						    new SimpleLineSymbol(
								    SimpleLineSymbol.STYLE_SOLID,
								    new Color([255,0,0]), 2
						    ),
						    new Color([130,159,83,0.40])
				    );

				    incidentsGraphicsLayer = new GraphicsLayer();

				    var incidentsRenderer = new SimpleRenderer(incidentPointSymbol);
				    incidentsGraphicsLayer.setRenderer(incidentsRenderer);
				    map.addLayer(incidentsGraphicsLayer);

				    routeGraphicLayer = new GraphicsLayer();

				    var routePolylineSymbol = new SimpleLineSymbol(
						    SimpleLineSymbol.STYLE_SOLID,
						    new Color([89,95,35]),
						    4.0
				    );
				    var routeRenderer = new SimpleRenderer(routePolylineSymbol);
				    routeGraphicLayer.setRenderer(routeRenderer);

				    map.addLayer(routeGraphicLayer);

				    var facilitiesGraphicsLayer = new GraphicsLayer();
				    var facilityRenderer = new SimpleRenderer(facilityPointSymbol);
				    facilitiesGraphicsLayer.setRenderer(facilityRenderer);

				    map.addLayer(facilitiesGraphicsLayer);

				    facilitiesGraphicsLayer.add(new Graphic(new Point(-118.113056,34.147222)));
				    facilitiesGraphicsLayer.add(new Graphic(new Point(-118.148678,34.1469199)));
				    facilitiesGraphicsLayer.add(new Graphic(new Point(-118.1413458,34.1689095)));
				    facilitiesGraphicsLayer.add(new Graphic(new Point(-118.1540939,34.1328351)));
				    facilitiesGraphicsLayer.add(new Graphic(new Point(-118.133393,34.1582492)));

				    var facilities = new FeatureSet();
				    facilities.features = facilitiesGraphicsLayer.graphics;

				    params.facilities = facilities;
				    params.outSpatialReference = map.spatialReference;

				    // adding home button
				    home = new HomeButton({
					    map: map
				    }, "HomeButton");
				    home.startup();



			    });
			    closestFacilityTask = new ClosestFacilityTask("http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/Network/USA/NAServer/Closest%20Facility");

			    console.log(closestFacilityTask);

			    function clearGraphics() {
				    //clear graphics
				    dom.byId("directionsDiv").innerHTML= "";
				    map.graphics.clear();
				    routeGraphicLayer.clear();
				    incidentsGraphicsLayer.clear();
			    }

			    function mapClickHandler(evt) {
				    clearGraphics();
				    dom.byId("directionsDiv").innerHTML= "";
				    var inPoint = new Point(evt.mapPoint.x,evt.mapPoint.y,map.spatialReference);
				    var location = new Graphic(inPoint);
				    incidentsGraphicsLayer.add(location);

				    var features = [];
				    features.push(location);
				    var incidents = new FeatureSet();
				    incidents.features = features;
				    params.incidents = incidents;

				    map.graphics.enableMouseEvents();

				    routeGraphicLayer.on("mouse-over", function(evt){
					    //clear existing directions and highlight symbol
					    map.graphics.clear();

					    //dom.byId("directionsDiv").innerHTML= "Hover over the route to view directions";

					    var highlightSymbol = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([0,255,255],0.25), 4.5);
					    var highlightGraphic = new Graphic(evt.graphic.geometry,highlightSymbol);

					    map.graphics.add(highlightGraphic);
					    dom.byId("directionsDiv").innerHTML = esriLang.substitute(evt.graphic.attributes,"${*}");

				    });

				    //solve
				    closestFacilityTask.solve(params,function(solveResult){
					    var directions = solveResult.directions;
					    array.forEach(solveResult.routes, function(route, index){
						    //build an array of route info
						    var attr = array.map(solveResult.directions[index].features,function(feature){
							    return feature.attributes.text;
						    });
						    var infoTemplate = new InfoTemplate("Attributes", "${*}");

						    route.setInfoTemplate(infoTemplate);
						    route.setAttributes(attr);

						    routeGraphicLayer.add(route);
						    //dom.byId("directionsDiv").innerHTML = "Hover over the route to view directions";
					    });

					    //display any messages
					    if(solveResult.messages.length > 0){
						    dom.byId("directionsDiv").innerHTML = "<b>Error:</b> " + solveResult.messages[0];
					    }
				    });
			    }
			    //export objects required for interaction
			    app = {
				    params: params,
				    map: map,
				    clearGraphics: clearGraphics
			    };
		    });
    </script>

  </body>
</html>